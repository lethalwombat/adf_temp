{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "exp-etas-dev-datafactory1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADF_CETAS_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The pipeline writes a view to an external table taking view name, table name and schema as parameters. View schema and table schema should be the same.\n\nThe process takes backup of the existing files if it fails the process restores the data.",
				"activities": [
					{
						"name": "Initial_Run_Check",
						"description": "Checks if the folder exists, if not it's assumed as the initial run for that external table",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CETAS_Binary_DS",
								"type": "DatasetReference",
								"parameters": {
									"cetas_Container": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									},
									"cetas_Folder": {
										"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Check Folder Exists",
						"description": "If the folder exists it deletes the backup folder takes the backup of existing data files and runs the CETAS DDL. If fails it restores the backup.  If not runs the CETAS, it creates the files.",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Initial_Run_Check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Initial_Run_Check').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Call_CETAS_Initial",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[helper].[usp_Write_External_Table_From_View]",
										"storedProcedureParameters": {
											"DATETIMEPATH": {
												"value": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm')),concat(formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm')))",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCESCHEMA": {
												"value": {
													"value": "@pipeline().parameters.sourceSchema",
													"type": "Expression"
												},
												"type": "String"
											},
											"STORAGEACCOUNT": {
												"value": {
													"value": "@pipeline().parameters.storageAccount",
													"type": "Expression"
												},
												"type": "String"
											},
											"TARGETSCHEMA": {
												"value": {
													"value": "@pipeline().parameters.targetSchema",
													"type": "Expression"
												},
												"type": "String"
											},
											"TB_NAME": {
												"value": {
													"value": "@pipeline().parameters.targetName",
													"type": "Expression"
												},
												"type": "String"
											},
											"VW_NAME": {
												"value": {
													"value": "@pipeline().parameters.sourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"debug": {
												"value": "0",
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_synapsesqlondemand_gen01",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Backup_Data",
									"description": "Backups the data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DeleteExistingBackup",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'))",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"deleteFilesAfterCompletion": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CETAS_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"cetas_Container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"cetas_Folder": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CETAS_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"cetas_Container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"cetas_Folder": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteExistingBackup",
									"description": "Deletes the backup-it fails if the backup doesn't exist but pipeline continues to process. This happens only on the second run.",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CETAS_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"cetas_Container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"cetas_Folder": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"wildcardFileName": "*",
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Call_CETAS",
									"description": "Runs the stored procedure with required parameters",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteTargetFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[helper].[usp_Write_External_Table_From_View]",
										"storedProcedureParameters": {
											"DATETIMEPATH": {
												"value": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm')),concat(formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm')))",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCESCHEMA": {
												"value": {
													"value": "@pipeline().parameters.sourceSchema",
													"type": "Expression"
												},
												"type": "String"
											},
											"STORAGEACCOUNT": {
												"value": {
													"value": "@pipeline().parameters.storageAccount",
													"type": "Expression"
												},
												"type": "String"
											},
											"TARGETSCHEMA": {
												"value": {
													"value": "@pipeline().parameters.targetSchema",
													"type": "Expression"
												},
												"type": "String"
											},
											"TB_NAME": {
												"value": {
													"value": "@pipeline().parameters.targetName",
													"type": "Expression"
												},
												"type": "String"
											},
											"VW_NAME": {
												"value": {
													"value": "@pipeline().parameters.sourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"debug": {
												"value": "0",
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_synapsesqlondemand_gen01",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore_Backup",
									"description": "Upon failure restores the backup files",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Call_CETAS",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'))",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CETAS_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"cetas_Container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"cetas_Folder": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/backup/'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CETAS_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"cetas_Container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"cetas_Folder": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteTargetFolder",
									"description": "Deletes the target folder for CETAS",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Backup_Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CETAS_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"cetas_Container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"cetas_Folder": {
													"value": "@if(empty(pipeline().parameters.PipelineStartTime),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'),concat(pipeline().parameters.targetSchema,'/',pipeline().parameters.targetName,'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().parameters.PipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm'),'/data/'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"targetName": {
						"type": "string"
					},
					"targetSchema": {
						"type": "string"
					},
					"sourceName": {
						"type": "string"
					},
					"sourceSchema": {
						"type": "string"
					},
					"container": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"PipelineStartTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SCD/Transformations"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-12T09:47:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopy_Excel_SourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_filesystem",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_worksheetName": {
						"type": "string"
					},
					"cw_folderName": {
						"type": "string"
					},
					"cw_fileName": {
						"type": "string"
					},
					"cw_ls_host": {
						"type": "string"
					},
					"cw_ls_userName": {
						"type": "string"
					},
					"cw_ls_passwordSecretName": {
						"type": "string"
					},
					"cw_range": {
						"type": "string"
					},
					"cw_firstRowAsHeaderSource": {
						"type": "bool"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopy_FileSystem"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().cw_worksheetName",
						"type": "Expression"
					},
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().cw_folderName",
							"type": "Expression"
						}
					},
					"range": {
						"value": "@dataset().cw_range",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().cw_firstRowAsHeaderSource",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopy_FileSystem_SourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_filesystem",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_worksheetName": {
						"type": "string"
					},
					"cw_folderName": {
						"type": "string"
					},
					"cw_fileName": {
						"type": "string"
					},
					"cw_ls_host": {
						"type": "string"
					},
					"cw_ls_userName": {
						"type": "string"
					},
					"cw_ls_passwordSecretName": {
						"type": "string"
					},
					"cw_range": {
						"type": "string"
					},
					"cw_columnDelimiter": {
						"type": "String"
					},
					"cw_escapeChar": {
						"type": "String"
					},
					"cw_quoteChar": {
						"type": "String"
					},
					"cw_firstRowAsHeaderSource": {
						"type": "bool"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopy_FileSystem"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().cw_folderName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().cw_columnDelimiter",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().cw_escapeChar",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().cw_firstRowAsHeaderSource",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().cw_quoteChar",
						"type": "Expression"
					},
					"sheetName": {
						"value": "@dataset().cw_worksheetName",
						"type": "Expression"
					},
					"range": {
						"value": "@dataset().cw_range",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopy_Oracle_SourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_oracle",
					"type": "LinkedServiceReference",
					"parameters": {
						"host": {
							"value": "@dataset().cw_ls_host",
							"type": "Expression"
						},
						"port": {
							"value": "@dataset().cw_ls_port",
							"type": "Expression"
						},
						"SID": {
							"value": "@dataset().cw_ls_SID",
							"type": "Expression"
						},
						"userName": {
							"value": "@dataset().cw_ls_userName",
							"type": "Expression"
						},
						"passwordSecretName": {
							"value": "@dataset().cw_ls_passwordSecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					},
					"cw_ls_host": {
						"type": "String"
					},
					"cw_ls_port": {
						"type": "String"
					},
					"cw_ls_SID": {
						"type": "String"
					},
					"cw_ls_userName": {
						"type": "String"
					},
					"cw_ls_passwordSecretName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopy_Oracle"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		}
	]
}