{
	"name": "MetadataDrivenCopy_Oracle_ParquetSourceDS",
	"properties": {
		"linkedServiceName": {
			"referenceName": "ls_azdatalake",
			"type": "LinkedServiceReference"
		},
		"parameters": {
			"cw_columnDelimiter": {
				"type": "String"
			},
			"cw_escapeChar": {
				"type": "String"
			},
			"cw_quoteChar": {
				"type": "String"
			},
			"cw_firstRowAsHeader": {
				"type": "Bool"
			},
			"cw_fileName": {
				"type": "String"
			},
			"cw_folderPath": {
				"type": "String"
			},
			"cw_fileSystem": {
				"type": "String"
			},
			"cw_pipelineStartTime": {
				"type": "string"
			}
		},
		"folder": {
			"name": "MetadataDrivenCopy_Oracle"
		},
		"annotations": [],
		"type": "DelimitedText",
		"typeProperties": {
			"location": {
				"type": "AzureBlobFSLocation",
				"fileName": {
					"value": "@dataset().cw_fileName",
					"type": "Expression"
				},
				"folderPath": {
					"value": "@if(empty(dataset().cw_pipelineStartTime),concat(dataset().cw_folderPath,'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','Cen. Australia Standard Time'), 'HHmm')),concat(dataset().cw_folderPath,'/',formatDateTime(convertTimeZone(dataset().cw_pipelineStartTime,'UTC','Cen. Australia Standard Time'), 'yyyy'),'/',formatDateTime(convertTimeZone(dataset().cw_pipelineStartTime,'UTC','Cen. Australia Standard Time'), 'MM'),'/',formatDateTime(convertTimeZone(dataset().cw_pipelineStartTime,'UTC','Cen. Australia Standard Time'), 'dd'),'/',formatDateTime(convertTimeZone(dataset().cw_pipelineStartTime,'UTC','Cen. Australia Standard Time'), 'HHmm')))",
					"type": "Expression"
				},
				"fileSystem": {
					"value": "@dataset().cw_fileSystem",
					"type": "Expression"
				}
			},
			"columnDelimiter": {
				"value": "@dataset().cw_columnDelimiter",
				"type": "Expression"
			},
			"escapeChar": {
				"value": "@dataset().cw_escapeChar",
				"type": "Expression"
			},
			"firstRowAsHeader": {
				"value": "@dataset().cw_firstRowAsHeader",
				"type": "Expression"
			},
			"quoteChar": {
				"value": "@dataset().cw_quoteChar",
				"type": "Expression"
			}
		},
		"schema": []
	},
	"type": "Microsoft.DataFactory/factories/datasets"
}